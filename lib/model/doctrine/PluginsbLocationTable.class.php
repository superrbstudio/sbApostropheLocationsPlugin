<?php

/**
 * PluginsbLocationTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginsbLocationTable extends Doctrine_Table
{
	/**
		* Returns an instance of this class.
		*
		* @return object PluginsbLocationTable
		*/
	public static function getInstance()
	{
			return Doctrine_Core::getTable('PluginsbLocation');
	}

	public static function getSlideShowName($location)
	{
		return  'sbLocation-' . $location['id'];
	}

	public static function getSlideShowSlug($location)
	{
		return 'sbLocation-' . $location['id'];
	}

	public static function getFirstImage($location)
	{
		$page = aPageTable::retrieveBySlugWithSlots(self::getSlideShowSlug($location));
    
    if($page)
    {
      $slot = $page->getSlot(self::getSlideShowName($location));

      if($slot)
      {
        $images = $slot->getOrderedMediaItems();

        if($images)
        {
          return $images[0]->getCropOriginal();
        }
      }
    }
			
		return false;
	}
  
  public static function listLocations($params = array())
  {
    $result = Doctrine_Query::create()->from('sbLocation AS l');
    
    if(isset($params['active']))
    {
      $result->andWhere('active = ?', $params['active']);
    }
    
    if(isset($params['order_by']))
    {
      $result->orderBy($params['order_by']);
    }
    else
    {
      $result->orderBy('l.updated_at DESC');
    }
    
    $fast = sfConfig::get('app_a_fasthydrate', false);
    return $result->execute();
  }
  
  /**
	 * Returns an array of sbGoogleSitemapPage objects for use by the google sitemap plugin
	 * @return array
	 */
	public static function pagesForSitemap()
	{
		sfContext::getInstance()->getConfiguration()->loadHelpers(array('Url'));
		$return    = array();
		$locations = self::listLocations(array('active' => true));

		foreach($locations as $location)
		{
			$return[] = new sbGoogleSitemapPage(sfContext::getInstance()->getRequest()->getHost(), url_for('@sb_location?slug=' . $location['slug']), false, 'monthly', 0.8, strtotime($location['updated_at']));
		}

		return $return;
	}
}